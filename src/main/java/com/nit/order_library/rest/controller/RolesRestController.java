/*
 * Created on 2019-03-15 ( Time 15:44:19 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
package com.nit.order_library.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import io.swagger.annotations.Api;

import com.nit.order_library.bean.Roles;
import com.nit.order_library.business.service.RolesService;

/**
 * Spring MVC controller for 'Roles' management.
 */
@RestController
@Api(tags= {"Roles"})
@RequestMapping("/api")
public class RolesRestController {

	@Resource
	private RolesService rolesService;
	
	@RequestMapping( value="/roles",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Roles> findAll() {
		return rolesService.findAll();
	}

	@RequestMapping( value="/roles/{roleId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Roles findOne(@PathVariable("roleId") Integer roleId) {
		return rolesService.findById(roleId);
	}
	
	@RequestMapping( value="/roles",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Roles create(@RequestBody Roles roles) {
		return rolesService.create(roles);
	}

	@RequestMapping( value="/roles/{roleId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Roles update(@PathVariable("roleId") Integer roleId, @RequestBody Roles roles) {
		return rolesService.update(roles);
	}

	@RequestMapping( value="/roles/{roleId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("roleId") Integer roleId) {
		rolesService.delete(roleId);
	}
	
}
