/*
 * Created on 2019-03-14 ( Time 16:44:08 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
package com.nit.order_library.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.nit.order_library.bean.Roles;
import com.nit.order_library.bean.jpa.RolesEntity;
import com.nit.order_library.bean.jpa.MembersEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class RolesServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public RolesServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'RolesEntity' to 'Roles'
	 * @param rolesEntity
	 */
	public Roles mapRolesEntityToRoles(RolesEntity rolesEntity) {
		if(rolesEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Roles roles = map(rolesEntity, Roles.class);

		//--- Link mapping ( link to Members )
		if(rolesEntity.getMembers() != null) {
			roles.setUserId(rolesEntity.getMembers().getUserId());
		}
		return roles;
	}
	
	/**
	 * Mapping from 'Roles' to 'RolesEntity'
	 * @param roles
	 * @param rolesEntity
	 */
	public void mapRolesToRolesEntity(Roles roles, RolesEntity rolesEntity) {
		if(roles == null) {
			return;
		}

		//--- Generic mapping 
		map(roles, rolesEntity);

		//--- Link mapping ( link : roles )
		if( hasLinkToMembers(roles) ) {
			MembersEntity members1 = new MembersEntity();
			members1.setUserId( roles.getUserId() );
			rolesEntity.setMembers( members1 );
		} else {
			rolesEntity.setMembers( null );
		}

	}
	
	/**
	 * Verify that Members id is valid.
	 * @param Members Members
	 * @return boolean
	 */
	private boolean hasLinkToMembers(Roles roles) {
		if(roles.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}