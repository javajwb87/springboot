/*
 * Created on 2021-09-27 ( Time 22:21:02 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
package com.source.library.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.source.library.bean.Prepayment;
import com.source.library.bean.jpa.PrepaymentEntity;
import com.source.library.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PrepaymentServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PrepaymentServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PrepaymentEntity' to 'Prepayment'
	 * @param prepaymentEntity
	 */
	public Prepayment mapPrepaymentEntityToPrepayment(PrepaymentEntity prepaymentEntity) {
		if(prepaymentEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Prepayment prepayment = map(prepaymentEntity, Prepayment.class);

		//--- Link mapping ( link to User )
		if(prepaymentEntity.getUser() != null) {
			prepayment.setUserId(prepaymentEntity.getUser().getUserId());
		}
		return prepayment;
	}
	
	/**
	 * Mapping from 'Prepayment' to 'PrepaymentEntity'
	 * @param prepayment
	 * @param prepaymentEntity
	 */
	public void mapPrepaymentToPrepaymentEntity(Prepayment prepayment, PrepaymentEntity prepaymentEntity) {
		if(prepayment == null) {
			return;
		}

		//--- Generic mapping 
		map(prepayment, prepaymentEntity);

		//--- Link mapping ( link : prepayment )
		if( hasLinkToUser(prepayment) ) {
			UserEntity user1 = new UserEntity();
			user1.setUserId( prepayment.getUserId() );
			prepaymentEntity.setUser( user1 );
		} else {
			prepaymentEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(Prepayment prepayment) {
		if(prepayment.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}