/*
 * Created on 2019-03-14 ( Time 16:44:08 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.source.library.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "books"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="books", catalog="niceorder" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="BooksEntity.countAll", query="SELECT COUNT(x) FROM BooksEntity x" )
} )
public class BooksEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="book_id", nullable=false)
    private Integer    bookId       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=64)
    private String     name         ;

    @Column(name="author", nullable=false, length=64)
    private String     author       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="publish_date")
    private Date       publishDate  ;

    @Column(name="description", length=128)
    private String     description  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="books", targetEntity=ChaptersEntity.class)
    private List<ChaptersEntity> listOfChapters;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public BooksEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setBookId( Integer bookId ) {
        this.bookId = bookId ;
    }
    public Integer getBookId() {
        return this.bookId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : author ( VARCHAR ) 
    public void setAuthor( String author ) {
        this.author = author;
    }
    public String getAuthor() {
        return this.author;
    }

    //--- DATABASE MAPPING : publish_date ( DATETIME ) 
    public void setPublishDate( Date publishDate ) {
        this.publishDate = publishDate;
    }
    public Date getPublishDate() {
        return this.publishDate;
    }

    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfChapters( List<ChaptersEntity> listOfChapters ) {
        this.listOfChapters = listOfChapters;
    }
    public List<ChaptersEntity> getListOfChapters() {
        return this.listOfChapters;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(bookId);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(author);
        sb.append("|");
        sb.append(publishDate);
        sb.append("|");
        sb.append(description);
        return sb.toString(); 
    } 

}
